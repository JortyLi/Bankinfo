<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bankinfo.mapper.BankLoginMapper" >
  <resultMap id="BaseResultMap" type="com.example.bankinfo.domain.BankLogin" >
    <!-- @mbggenerated -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_pass" property="loginPass" jdbcType="VARCHAR" />
    <result column="bank_state" property="bankState" jdbcType="INTEGER" />
    <result column="bank_confID" property="bankConfid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!-- @mbggenerated -->
    id, bank_name, user_name, login_name, login_pass, bank_state, bank_confID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!-- @mbggenerated -->
    select 
    <include refid="Base_Column_List" />
    from bank_login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!-- @mbggenerated -->
    delete from bank_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.example.bankinfo.domain.BankLogin" >
    <!-- @mbggenerated -->
    insert into bank_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPass != null" >
        login_pass,
      </if>
      <if test="bankState != null" >
        bank_state,
      </if>
      <if test="bankConfid != null" >
        bank_confID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="bankState != null" >
        #{bankState,jdbcType=INTEGER},
      </if>
      <if test="bankConfid != null" >
        #{bankConfid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bankinfo.domain.BankLogin" >
    <!-- @mbggenerated -->
    update bank_login
    <set >
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        login_pass = #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="bankState != null" >
        bank_state = #{bankState,jdbcType=INTEGER},
      </if>
      <if test="bankConfid != null" >
        bank_confID = #{bankConfid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" parameterType="com.example.bankinfo.domain.BankLogin" resultMap="BaseResultMap" >
    <!-- @mbggenerated -->
    select 
    <include refid="Base_Column_List" />
    from bank_login
    <where >
      <if test="id != null" >
         and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="bankName != null" >
         and bank_name = #{bankName,jdbcType=VARCHAR}
      </if>
      <if test="userName != null" >
         and user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="loginName != null" >
         and login_name = #{loginName,jdbcType=VARCHAR}
      </if>
      <if test="loginPass != null" >
         and login_pass = #{loginPass,jdbcType=VARCHAR}
      </if>
      <if test="bankState != null" >
         and bank_state = #{bankState,jdbcType=INTEGER}
      </if>
      <if test="bankConfid != null" >
         and bank_confID = #{bankConfid,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>